plugins {
   id 'java'
   id 'org.springframework.boot' version '3.4.5'
   id 'io.spring.dependency-management' version '1.1.7'
}


group = 'com.realive'
version = '0.0.1-SNAPSHOT'


java {
   toolchain {
      languageVersion = JavaLanguageVersion.of(17)
   }
}


configurations {
   compileOnly {
      extendsFrom annotationProcessor
   }
}


repositories {
   mavenCentral()
}


dependencies {
   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
   implementation 'org.springframework.boot:spring-boot-starter-security'
   implementation 'org.springframework.boot:spring-boot-starter-validation'
   implementation 'org.springframework.boot:spring-boot-starter-web'

   implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

   compileOnly 'org.projectlombok:lombok'
   developmentOnly 'org.springframework.boot:spring-boot-devtools'
   runtimeOnly 'org.postgresql:postgresql'
   annotationProcessor 'org.projectlombok:lombok'

   testImplementation 'org.springframework.boot:spring-boot-starter-test'
   testImplementation 'org.springframework.security:spring-security-test'
   testImplementation("org.mockito:mockito-core:5.2.0")
   testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

   implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
   runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
   runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

   testCompileOnly 'org.projectlombok:lombok'
   testAnnotationProcessor 'org.projectlombok:lombok'


   // Querydsl (Groovy 기준)
   implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
   annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
   annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
   annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

   implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
   testImplementation 'org.springframework.security:spring-security-test'
   implementation 'org.springframework.boot:spring-boot-starter-security'

   implementation 'org.springframework.boot:spring-boot-starter-webflux'
   

}


tasks.named('test') {
   useJUnitPlatform()
}


def querydslDir = "$buildDir/generated/querydsl"


sourceSets {
   main {
      java {
         srcDir querydslDir
      }
   }
}


tasks.withType(JavaCompile).configureEach {
   options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}
